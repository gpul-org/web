---

const {
  contents,
  tags
} = Astro.props;
---

<section class="py-3 bg-gray-50 border-b flex flex-row gap-3">
  <div class="max-w-7xl mx-auto flex gap-3 px-4 sm:px-6 lg:px-8">
    <div class="py-3">
      <label
        class="px-4 py-2 bg-white text-gray-700 border rounded-full w-max block
               text-sm font-medium hover:bg-gray-50 transition-colors
               hover:cursor-pointer has-checked:bg-blue-600 has-checked:text-white
               has-checked:hover:bg-blue-700"
      >
        <input
          data-filter="all"
          type="checkbox" class="hidden peer"
        />
        Todas
      </label>
    </div>
    <div class="flex py-3 gap-3 place-center overflow-x-scroll" id="filters">
      {
        tags.map((name, index) => {
          return (
            <div>
              <label
                class="px-4 py-2 bg-white text-gray-700 border rounded-full w-max block
                       text-sm font-medium hover:bg-gray-50 transition-colors
                       hover:cursor-pointer has-checked:bg-blue-600 has-checked:text-white
                       has-checked:hover:bg-blue-700"
              >
                <input data-filter={name} type="checkbox" class="hidden peer" />
                {name}
              </label>
            </div>
          )
        })
      }
    </div>
  </div>

  <script is:inline defer>
    const allCheckbox = document.querySelector('[data-filter="all"]');
    const otherCheckboxes = document.querySelectorAll('[data-filter]:not([data-filter="all"])');

    allCheckbox.addEventListener("change", () => {
      if (!allCheckbox.checked) {return;}
      otherCheckboxes.forEach((cb) => (cb.checked = false));
      const filtrables = document.querySelectorAll('[data-filtrable]')
      filtrables.forEach(e => e.classList.remove("hidden"))
    });

    otherCheckboxes.forEach(cb => {
      cb.addEventListener("change", () => {
        if (!cb.checked) return;
        
        allCheckbox.checked = false;
        const selected =
          document.querySelectorAll(`[data-filtrable~="${cb.dataset.filter}"]`)
        const discarded =
          document.querySelectorAll(`[data-filtrable]:not([data-filtrable~="${cb.dataset.filter}"])`)

        selected.forEach(e => e.classList.remove("hidden"))
        discarded.forEach(e => e.classList.add("hidden"))
      });
    });

    function filterContent() {
      
    }
  </script>
</section>
