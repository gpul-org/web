---
import ImagePlaceholder from './ImagePlaceholder.astro';
import ChevronRight from 'lucide-astro/ChevronRight';

interface Props {
  class?: string;
  title: string;
  excerpt?: string;
  date?: Date;
  author?: string;
  href?: string;
  image?: string;
  imageAlt?: string;
  tags?: string[];
}

const { 
  class: className = "",
  title,
  excerpt,
  date,
  author,
  href,
  image,
  imageAlt = title,
  tags = []
} = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat("gl", {
    year: "numeric",
    month: "numeric",
    day: "numeric",
  }).format(date)
}

const CardTag = href ? 'a' : 'div';
console.log(image)
---

<CardTag
  href={href}
  class={`bg-white block rounded-lg shadow-md overflow-hidden transition-transform duration-200 hover:scale-105 hover:shadow-lg ${href ? 'cursor-pointer' : ''} ${className}`}
>
  {image ? (
    <div class="aspect-video">
      <img 
        width="100%" 
        height="200px" 
        src={image}
        alt={imageAlt}
        className="w-full h-full object-cover"
      />
    </div>
  ) : (
    <ImagePlaceholder 
      width="100%" 
      height="200px" 
      alt={imageAlt}
      className="w-full h-full object-cover"
    />
  )}
  
  <div class="p-6">
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-3">
        {tags.map((tag) => (
          <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs font-semibold rounded-full">
            {tag}
          </span>
        ))}
      </div>
    )}
    
    <h3 class="text-xl font-semibold text-gray-900 mb-3 line-clamp-2">
      {title}
    </h3>
    
    {excerpt && (
      <p class="text-gray-600 mb-4 line-clamp-3">
        {excerpt}
      </p>
    )}
    
    <div class="flex items-center justify-between text-sm text-gray-500">
      <div class="flex items-center space-x-4">
        {author && (
          <span class="font-medium">{author}</span>
        )}
        {date && (
          <time datetime={date.toString()}>{formatDate(date)}</time>
        )}
      </div>
      
      {href && (
        <span class="text-blue-600 font-medium flex items-center">
          Ler m√°is
          <ChevronRight class="ml-1 w-4 h-4" />
        </span>
      )}
    </div>
  </div>
</CardTag>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
