---
interface Props {
  variant?: 'primary' | 'secondary';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  class?: string;
}

const { 
  variant = 'primary', 
  size = 'md', 
  href,
  class: className = ''
} = Astro.props;

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-base'
};

const variantClasses = {
  primary: 'bg-blue-600 text-white border-2 border-blue-600 hover:bg-blue-700 hover:border-blue-700',
  secondary: 'bg-transparent border-2 hover:bg-current hover:text-current'
};

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2';

const buttonClasses = `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${className}`;

const Tag = href ? 'a' : 'button';
---

<Tag 
  href={href}
  class={buttonClasses}
  {...href && { role: 'button' }}
>
  <slot />
</Tag>